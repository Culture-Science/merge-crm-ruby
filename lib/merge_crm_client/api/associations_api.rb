=begin
#Merge CRM API

#The unified API for building rich integrations with multiple CRM platforms.

The version of the OpenAPI document: 1.0
Contact: hello@merge.dev
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 5.1.1

=end

require 'cgi'

module MergeCRMClient
  class AssociationsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Returns a list of `Association` objects.
    # @param x_account_token [String] Token identifying the end user.
    # @param custom_object_class_id [String] 
    # @param object_id [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :association_type_id If provided, will only return opportunities with this association_type.
    # @option opts [Time] :created_after If provided, will only return objects created after this datetime.
    # @option opts [Time] :created_before If provided, will only return objects created before this datetime.
    # @option opts [String] :cursor The pagination cursor value.
    # @option opts [String] :expand Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
    # @option opts [Boolean] :include_deleted_data Whether to include data that was marked as deleted by third party webhooks.
    # @option opts [Boolean] :include_remote_data Whether to include the original data Merge fetched from the third-party to produce these models.
    # @option opts [Time] :modified_after If provided, only objects synced by Merge after this date time will be returned.
    # @option opts [Time] :modified_before If provided, only objects synced by Merge before this date time will be returned.
    # @option opts [Integer] :page_size Number of results to return per page.
    # @option opts [String] :remote_id The API provider&#39;s ID for the given object.
    # @return [PaginatedAssociationList]
    def custom_object_classes_custom_objects_associations_list(x_account_token, custom_object_class_id, object_id, opts = {})
      data, _status_code, _headers = custom_object_classes_custom_objects_associations_list_with_http_info(x_account_token, custom_object_class_id, object_id, opts)
      data
    end

    # Returns a list of &#x60;Association&#x60; objects.
    # @param x_account_token [String] Token identifying the end user.
    # @param custom_object_class_id [String] 
    # @param object_id [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [String] :association_type_id If provided, will only return opportunities with this association_type.
    # @option opts [Time] :created_after If provided, will only return objects created after this datetime.
    # @option opts [Time] :created_before If provided, will only return objects created before this datetime.
    # @option opts [String] :cursor The pagination cursor value.
    # @option opts [String] :expand Which relations should be returned in expanded form. Multiple relation names should be comma separated without spaces.
    # @option opts [Boolean] :include_deleted_data Whether to include data that was marked as deleted by third party webhooks.
    # @option opts [Boolean] :include_remote_data Whether to include the original data Merge fetched from the third-party to produce these models.
    # @option opts [Time] :modified_after If provided, only objects synced by Merge after this date time will be returned.
    # @option opts [Time] :modified_before If provided, only objects synced by Merge before this date time will be returned.
    # @option opts [Integer] :page_size Number of results to return per page.
    # @option opts [String] :remote_id The API provider&#39;s ID for the given object.
    # @return [Array<(PaginatedAssociationList, Integer, Hash)>] PaginatedAssociationList data, response status code and response headers
    def custom_object_classes_custom_objects_associations_list_with_http_info(x_account_token, custom_object_class_id, object_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AssociationsApi.custom_object_classes_custom_objects_associations_list ...'
      end
      # verify the required parameter 'x_account_token' is set
      if @api_client.config.client_side_validation && x_account_token.nil?
        fail ArgumentError, "Missing the required parameter 'x_account_token' when calling AssociationsApi.custom_object_classes_custom_objects_associations_list"
      end
      # verify the required parameter 'custom_object_class_id' is set
      if @api_client.config.client_side_validation && custom_object_class_id.nil?
        fail ArgumentError, "Missing the required parameter 'custom_object_class_id' when calling AssociationsApi.custom_object_classes_custom_objects_associations_list"
      end
      # verify the required parameter 'object_id' is set
      if @api_client.config.client_side_validation && object_id.nil?
        fail ArgumentError, "Missing the required parameter 'object_id' when calling AssociationsApi.custom_object_classes_custom_objects_associations_list"
      end
      allowable_values = ["association_type"]
      if @api_client.config.client_side_validation && opts[:'expand'] && !allowable_values.include?(opts[:'expand'])
        fail ArgumentError, "invalid value for \"expand\", must be one of #{allowable_values}"
      end
      # resource path
      local_var_path = '/custom-object-classes/{custom_object_class_id}/custom-objects/{object_id}/associations'.sub('{' + 'custom_object_class_id' + '}', CGI.escape(custom_object_class_id.to_s)).sub('{' + 'object_id' + '}', CGI.escape(object_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'association_type_id'] = opts[:'association_type_id'] if !opts[:'association_type_id'].nil?
      query_params[:'created_after'] = opts[:'created_after'] if !opts[:'created_after'].nil?
      query_params[:'created_before'] = opts[:'created_before'] if !opts[:'created_before'].nil?
      query_params[:'cursor'] = opts[:'cursor'] if !opts[:'cursor'].nil?
      query_params[:'expand'] = opts[:'expand'] if !opts[:'expand'].nil?
      query_params[:'include_deleted_data'] = opts[:'include_deleted_data'] if !opts[:'include_deleted_data'].nil?
      query_params[:'include_remote_data'] = opts[:'include_remote_data'] if !opts[:'include_remote_data'].nil?
      query_params[:'modified_after'] = opts[:'modified_after'] if !opts[:'modified_after'].nil?
      query_params[:'modified_before'] = opts[:'modified_before'] if !opts[:'modified_before'].nil?
      query_params[:'page_size'] = opts[:'page_size'] if !opts[:'page_size'].nil?
      query_params[:'remote_id'] = opts[:'remote_id'] if !opts[:'remote_id'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-Account-Token'] = x_account_token

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'PaginatedAssociationList'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['tokenAuth']

      new_options = opts.merge(
        :operation => :"AssociationsApi.custom_object_classes_custom_objects_associations_list",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AssociationsApi#custom_object_classes_custom_objects_associations_list\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Creates an Association between `source_object_id` and `target_object_id` of type `association_type_id`.
    # @param x_account_token [String] Token identifying the end user.
    # @param association_type_id [String] 
    # @param source_class_id [String] 
    # @param source_object_id [String] 
    # @param target_class_id [String] 
    # @param target_object_id [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :is_debug_mode Whether to include debug fields (such as log file links) in the response.
    # @option opts [Boolean] :run_async Whether or not third-party updates should be run asynchronously.
    # @return [Association]
    def custom_object_classes_custom_objects_associations_update(x_account_token, association_type_id, source_class_id, source_object_id, target_class_id, target_object_id, opts = {})
      data, _status_code, _headers = custom_object_classes_custom_objects_associations_update_with_http_info(x_account_token, association_type_id, source_class_id, source_object_id, target_class_id, target_object_id, opts)
      data
    end

    # Creates an Association between &#x60;source_object_id&#x60; and &#x60;target_object_id&#x60; of type &#x60;association_type_id&#x60;.
    # @param x_account_token [String] Token identifying the end user.
    # @param association_type_id [String] 
    # @param source_class_id [String] 
    # @param source_object_id [String] 
    # @param target_class_id [String] 
    # @param target_object_id [String] 
    # @param [Hash] opts the optional parameters
    # @option opts [Boolean] :is_debug_mode Whether to include debug fields (such as log file links) in the response.
    # @option opts [Boolean] :run_async Whether or not third-party updates should be run asynchronously.
    # @return [Array<(Association, Integer, Hash)>] Association data, response status code and response headers
    def custom_object_classes_custom_objects_associations_update_with_http_info(x_account_token, association_type_id, source_class_id, source_object_id, target_class_id, target_object_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: AssociationsApi.custom_object_classes_custom_objects_associations_update ...'
      end
      # verify the required parameter 'x_account_token' is set
      if @api_client.config.client_side_validation && x_account_token.nil?
        fail ArgumentError, "Missing the required parameter 'x_account_token' when calling AssociationsApi.custom_object_classes_custom_objects_associations_update"
      end
      # verify the required parameter 'association_type_id' is set
      if @api_client.config.client_side_validation && association_type_id.nil?
        fail ArgumentError, "Missing the required parameter 'association_type_id' when calling AssociationsApi.custom_object_classes_custom_objects_associations_update"
      end
      # verify the required parameter 'source_class_id' is set
      if @api_client.config.client_side_validation && source_class_id.nil?
        fail ArgumentError, "Missing the required parameter 'source_class_id' when calling AssociationsApi.custom_object_classes_custom_objects_associations_update"
      end
      # verify the required parameter 'source_object_id' is set
      if @api_client.config.client_side_validation && source_object_id.nil?
        fail ArgumentError, "Missing the required parameter 'source_object_id' when calling AssociationsApi.custom_object_classes_custom_objects_associations_update"
      end
      # verify the required parameter 'target_class_id' is set
      if @api_client.config.client_side_validation && target_class_id.nil?
        fail ArgumentError, "Missing the required parameter 'target_class_id' when calling AssociationsApi.custom_object_classes_custom_objects_associations_update"
      end
      # verify the required parameter 'target_object_id' is set
      if @api_client.config.client_side_validation && target_object_id.nil?
        fail ArgumentError, "Missing the required parameter 'target_object_id' when calling AssociationsApi.custom_object_classes_custom_objects_associations_update"
      end
      # resource path
      local_var_path = '/custom-object-classes/{source_class_id}/custom-objects/{source_object_id}/associations/{target_class_id}/{target_object_id}/{association_type_id}'.sub('{' + 'association_type_id' + '}', CGI.escape(association_type_id.to_s)).sub('{' + 'source_class_id' + '}', CGI.escape(source_class_id.to_s)).sub('{' + 'source_object_id' + '}', CGI.escape(source_object_id.to_s)).sub('{' + 'target_class_id' + '}', CGI.escape(target_class_id.to_s)).sub('{' + 'target_object_id' + '}', CGI.escape(target_object_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'is_debug_mode'] = opts[:'is_debug_mode'] if !opts[:'is_debug_mode'].nil?
      query_params[:'run_async'] = opts[:'run_async'] if !opts[:'run_async'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      header_params[:'X-Account-Token'] = x_account_token

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Association'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['tokenAuth']

      new_options = opts.merge(
        :operation => :"AssociationsApi.custom_object_classes_custom_objects_associations_update",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: AssociationsApi#custom_object_classes_custom_objects_associations_update\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
